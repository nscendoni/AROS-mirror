=======
gallium
=======

.. This document is automatically generated. Don't edit it!

`Index <index>`_

----------

======================================= ======================================= ======================================= ======================================= 
`BltPipeResourceRastPort()`_            `BltPipeSurfaceRastPort()`_             `CreatePipeScreen()`_                   `DestroyPipeScreen()`_                  

======================================= ======================================= ======================================= ======================================= 

-----------

BltPipeResourceRastPort()
=========================

Synopsis
~~~~~~~~
::

 void BltPipeResourceRastPort(
          struct pipe_resource * srcPipeResource,
          LONG xSrc,
          LONG ySrc,
          struct RastPort * destRP,
          LONG xDest,
          LONG yDest,
          LONG xSize,
          LONG ySize );

Function
~~~~~~~~
::

     Copies part of pipe resource onto rast port. Clips output by using layers of
     rastport.


Inputs
~~~~~~
::

     srcPipeResource - Copy from this pipe resource.
     xSrc, ySrc - This is the upper left corner of the area to copy.
     destRP - Destination RastPort.
     xDest, yDest - Upper left corner where to place the copy
     xSize, ySize - The size of the area to copy



----------

BltPipeSurfaceRastPort()
========================

Synopsis
~~~~~~~~
::

 void BltPipeSurfaceRastPort(
          struct pipe_surface * srcPipeSurface,
          LONG xSrc,
          LONG ySrc,
          struct RastPort * destRP,
          LONG xDest,
          LONG yDest,
          LONG xSize,
          LONG ySize );

Function
~~~~~~~~
::

     Copies part of pipe surface onto rast port. Clips output by using layers of
     rastport.


Inputs
~~~~~~
::

     srcPipeSurface - Copy from this pipe surface.
     xSrc, ySrc - This is the upper left corner of the area to copy.
     destRP - Destination RastPort.
     xDest, yDest - Upper left corner where to place the copy
     xSize, ySize - The size of the area to copy



----------

CreatePipeScreen()
==================

Synopsis
~~~~~~~~
::

 struct pipe_screen * CreatePipeScreen(
          struct TagItem * tags );
 
 struct pipe_screen * CreatePipeScreenTags(
          TAG tag, ... );

Function
~~~~~~~~
::

     Creates a gallium pipe screen.


Inputs
~~~~~~
::

     tags - a pointer to tags to be used during creation.


Tags
~~~~
::

     CPS_GalliumInterfaceVersion - Indicates a version of gallium interface
         that a client is expected to receive. The client expected version
         must ideally match with the version that the driver provides,
         because gallium interface is not backwards compatible. This tag is
         required. Unless otherwise needed, the value
         GALLIUM_INTERFACE_VERSION should be passed.
         See also CreatePipeScreenV.


Result
~~~~~~
::

     A valid pipe screen instance or NULL if creation was not successful.



----------

DestroyPipeScreen()
===================

Synopsis
~~~~~~~~
::

 void DestroyPipeScreen(
          struct pipe_screen * screen );

Function
~~~~~~~~
::

     Disposes the pipe screen


Inputs
~~~~~~
::

     handle - a pointer to pipe screen structure. A NULL pointer will be
         ignored.


Result
~~~~~~
::

     The pipe screen is freed. Don't use it anymore.



