diff -ruN curl-7.37.1/acinclude.m4 curl-7.37.1-aros/acinclude.m4
--- curl-7.37.1/acinclude.m4	2014-06-11 19:52:29.000000000 +0200
+++ curl-7.37.1-aros/acinclude.m4	2014-08-05 20:20:50.085223541 +0200
@@ -1336,6 +1336,13 @@
 #ifdef HAVE_SYS_SOCKET_H
 #include <sys/socket.h>
 #endif
+#ifdef __AROS__
+#include <proto/bsdsocket.h>
+#endif
+#endif
+    ],[
+#ifdef __AROS__
+      void *SocketBase;
 #endif
     ]],[[
       recv(0, 0, 0, 0);
@@ -1470,6 +1477,13 @@
 #ifdef HAVE_SYS_SOCKET_H
 #include <sys/socket.h>
 #endif
+#ifdef __AROS__
+#include <proto/bsdsocket.h>
+#endif
+#endif
+    ],[
+#ifdef __AROS__
+      void *SocketBase;
 #endif
     ]],[[
       send(0, 0, 0, 0);
diff -ruN curl-7.37.1/configure curl-7.37.1-aros/configure
--- curl-7.37.1/configure	2014-07-14 20:50:03.000000000 +0200
+++ curl-7.37.1-aros/configure	2014-08-05 20:20:50.085223541 +0200
@@ -19448,6 +19448,59 @@
 
 fi
 
+if test "$HAVE_GETHOSTBYNAME" != "1"
+then
+    { echo "$as_me:$LINENO: checking for gethostbyname in bsdsocket.library" >&5
+echo $ECHO_N "checking for gethostbyname in bsdsocket.library... $ECHO_C" >&6; }
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#include <proto/bsdsocket.h>
+int
+main ()
+{
+void *SocketBase; gethostbyname("");
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+     test -z "$ac_c_werror_flag" ||
+     test ! -s conftest.err
+       } && test -s conftest$ac_exeext &&
+       $as_test_x conftest$ac_exeext; then
+                 { echo "$as_me:$LINENO: result: yes" >&5
+echo "${ECHO_T}yes" >&6; }
+              HAVE_GETHOSTBYNAME="1"
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+    { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest_ipa8_conftest.oo \
+      conftest$ac_exeext conftest.$ac_ext
+fi
+
 
 if test "$HAVE_GETHOSTBYNAME" != "1"; then
   as_fn_error $? "couldn't find libraries for gethostbyname()" "$LINENO" 5
@@ -19734,62 +19787,6 @@
 
 
 
-    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for connect in libraries" >&5
-$as_echo_n "checking for connect in libraries... " >&6; }
-  tst_connect_save_LIBS="$LIBS"
-  tst_connect_need_LIBS="unknown"
-  for tst_lib in '' '-lsocket' ; do
-    if test "$tst_connect_need_LIBS" = "unknown"; then
-      LIBS="$tst_lib $tst_connect_save_LIBS"
-      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-
-
-          $curl_includes_winsock2
-          #ifndef HAVE_WINDOWS_H
-            int connect(int, void*, int);
-          #endif
-
-int main (void)
-{
-
-          if(0 != connect(0, 0, 0))
-            return 1;
-
- ;
- return 0;
-}
-
-_ACEOF
-if ac_fn_c_try_link "$LINENO"; then :
-
-        tst_connect_need_LIBS="$tst_lib"
-
-fi
-rm -f core conftest.err conftest.$ac_objext \
-    conftest$ac_exeext conftest.$ac_ext
-    fi
-  done
-  LIBS="$tst_connect_save_LIBS"
-  #
-  case X-"$tst_connect_need_LIBS" in
-    X-unknown)
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: cannot find connect" >&5
-$as_echo "cannot find connect" >&6; }
-      as_fn_error $? "cannot find connect function in libraries." "$LINENO" 5
-      ;;
-    X-)
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-      ;;
-    *)
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: $tst_connect_need_LIBS" >&5
-$as_echo "$tst_connect_need_LIBS" >&6; }
-      LIBS="$tst_connect_need_LIBS $tst_connect_save_LIBS"
-      ;;
-  esac
-
-
 CURL_NETWORK_LIBS=$LIBS
 
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether time.h and sys/time.h may both be included" >&5
@@ -21766,8 +21763,63 @@
             { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
         fi
+    fi
 
-    else
+    if test "$ac_cv_lib_ssl_SSL_connect" != yes; then
+                { echo "$as_me:$LINENO: checking for ssl with SocketBase available" >&5
+echo $ECHO_N "checking for ssl with SocketBase available... $ECHO_C" >&6; }
+        OLIBS=$LIBS
+        LIBS="-lssl $LIBS"
+        cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+void *SocketBase;
+int
+main ()
+{
+SSL_connect(0);
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+    test -z "$ac_c_werror_flag" ||
+    test ! -s conftest.err
+       } && test -s conftest$ac_exeext &&
+       $as_test_x conftest$ac_exeext; then
+  ac_cv_lib_ssl_SSL_connect="yes"
+                     { echo "$as_me:$LINENO: result: yes" >&5
+echo "${ECHO_T}yes" >&6; }
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+   LIBS=$OLIBS
+                     { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest_ipa8_conftest.oo \
+      conftest$ac_exeext conftest.$ac_ext
+    fi
+
+    if test "$ac_cv_lib_ssl_SSL_connect" = yes; then
 
             for ac_header in openssl/x509.h openssl/rsa.h openssl/crypto.h \
                        openssl/pem.h openssl/ssl.h openssl/err.h
@@ -27319,7 +27371,7 @@
 else
 
       curl_cv_in_addr_t_equiv="unknown"
-      for t in "unsigned long" int size_t unsigned long; do
+      for t in uint32_t "unsigned long" int size_t unsigned long; do
         if test "$curl_cv_in_addr_t_equiv" = "unknown"; then
           cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
@@ -27351,11 +27403,16 @@
 #ifdef HAVE_ARPA_INET_H
 #include <arpa/inet.h>
 #endif
+#ifdef __AROS__
+#include <proto/bsdsocket.h>
+#endif
 #endif
 
 int main (void)
 {
-
+#ifdef __AROS__
+      void *SocketBase;
+#endif
               $t data = inet_addr ("1.2.3.4");
 
  ;
@@ -27834,11 +27891,16 @@
 #ifdef HAVE_SYS_SOCKET_H
 #include <sys/socket.h>
 #endif
+#ifdef __AROS__
+#include <proto/bsdsocket.h>
+#endif
 #endif
 
 int main (void)
 {
-
+#ifdef __AROS__
+      void *SocketBase;
+#endif
       recv(0, 0, 0, 0);
 
  ;
@@ -27954,7 +28016,6 @@
 #define RECV_TYPE_ARG2 $2
 _ACEOF
 
-
 cat >>confdefs.h <<_ACEOF
 #define RECV_TYPE_ARG3 $3
 _ACEOF
@@ -28022,11 +28083,16 @@
 #ifdef HAVE_SYS_SOCKET_H
 #include <sys/socket.h>
 #endif
+#ifdef __AROS__
+#include <proto/bsdsocket.h>
+#endif
 #endif
 
 int main (void)
 {
-
+#ifdef __AROS__
+      void *SocketBase;
+#endif
       send(0, 0, 0, 0);
 
  ;
diff -ruN curl-7.37.1/configure.ac curl-7.37.1-aros/configure.ac
--- curl-7.37.1/configure.ac	2014-07-14 20:49:18.000000000 +0200
+++ curl-7.37.1-aros/configure.ac	2014-08-05 20:20:50.085223541 +0200
@@ -607,6 +607,19 @@
        AC_MSG_RESULT(yes)
 )
 
+if test "$HAVE_GETHOSTBYNAME" != "1"
+then
+  dnl AROS gets to gethostbyname via bsdsocket.library
+  AC_MSG_CHECKING([for gethostbyname in bsdsocket.library])
+  AC_TRY_LINK([#include <proto/bsdsocket.h>],
+              [void *SocketBase; gethostbyname("");],
+              [ dnl worked!
+              AC_MSG_RESULT([yes])
+              HAVE_GETHOSTBYNAME="1"],
+              AC_MSG_RESULT(no)
+             )
+fi
+
 
 dnl **********************************************************************
 dnl Check for built-in manual
@@ -1538,8 +1551,22 @@
         else
             AC_MSG_RESULT(yes)
         fi
+    fi
+
+    if test "$ac_cv_lib_ssl_SSL_connect" != yes; then
+        dnl on AROS, libssl needs SocketBase
+        AC_MSG_CHECKING(for ssl with SocketBase available)
+        OLIBS=$LIBS
+        LIBS="-lssl $LIBS"
+        AC_TRY_LINK([void *SocketBase;],
+                    [SSL_connect(0);],
+                    [ac_cv_lib_ssl_SSL_connect="yes"
+                     AC_MSG_RESULT([yes])],
+                    [LIBS=$OLIBS
+                     AC_MSG_RESULT([no])])
+    fi
 
-    else
+    if test "$ac_cv_lib_ssl_SSL_connect" = yes; then
 
       dnl Have the libraries--check for SSLeay/OpenSSL headers
       AC_CHECK_HEADERS(openssl/x509.h openssl/rsa.h openssl/crypto.h \
diff -ruN curl-7.37.1/lib/aros.c curl-7.37.1-aros/lib/aros.c
--- curl-7.37.1/lib/aros.c	1970-01-01 01:00:00.000000000 +0100
+++ curl-7.37.1-aros/lib/aros.c	2014-08-05 20:20:50.085223541 +0200
@@ -0,0 +1,69 @@
+/***************************************************************************
+ *                                  _   _ ____  _
+ *  Project                     ___| | | |  _ \| |
+ *                             / __| | | | |_) | |
+ *                            | (__| |_| |  _ <| |___
+ *                             \___|\___/|_| \_\_____|
+ *
+ * Copyright (C) 1998 - 2007, Daniel Stenberg, <daniel@haxx.se>, et al.
+ *
+ * This software is licensed as described in the file COPYING, which
+ * you should have received as part of this distribution. The terms
+ * are also available at http://curl.haxx.se/docs/copyright.html.
+ *
+ * You may opt to use, copy, modify, merge, publish, distribute and/or sell
+ * copies of the Software, and permit persons to whom the Software is
+ * furnished to do so, under the terms of the COPYING file.
+ *
+ * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
+ * KIND, either express or implied.
+ *
+ * $Id$
+ ***************************************************************************/
+
+#ifdef __AROS__ /* AROS */
+
+#include <errno.h>
+#include <aros/symbolsets.h>
+#include <exec/libraries.h>
+#include <proto/exec.h>
+#include <proto/dos.h>
+#include <proto/bsdsocket.h>
+#include <bsdsocket/socketbasetags.h>
+
+struct Library * __attribute__((weak)) SocketBase = NULL;
+
+void aros_cleanup()
+{
+  if(SocketBase) {
+    CloseLibrary(SocketBase);
+    SocketBase = NULL;
+  }
+}
+
+BOOL aros_init()
+{
+  if(!SocketBase)
+    SocketBase = OpenLibrary("bsdsocket.library", 4);
+  
+  if(!SocketBase) {
+    Printf("No TCP/IP Stack running!", "");
+    return FALSE;
+  }
+  
+  if(SocketBaseTags(
+    SBTM_SETVAL(SBTC_ERRNOPTR(sizeof(errno))), (IPTR) &errno,
+    SBTM_SETVAL(SBTC_LOGTAGPTR),       (IPTR) "cURL",
+  TAG_DONE)) {
+    
+    Printf("SocketBaseTags ERROR", "");
+    return FALSE;
+  }
+  
+  return TRUE;
+}
+
+ADD2INIT(aros_init, -50)
+ADD2EXIT(aros_cleanup, -50)
+
+#endif /* __AROS__ */
diff -ruN curl-7.37.1/lib/connect.c curl-7.37.1-aros/lib/connect.c
--- curl-7.37.1/lib/connect.c	2014-07-04 18:28:45.000000000 +0200
+++ curl-7.37.1-aros/lib/connect.c	2014-08-05 20:20:50.085223541 +0200
@@ -59,6 +59,10 @@
 #define _MPRINTF_REPLACE /* use our functions only */
 #include <curl/mprintf.h>
 
+#ifdef __AROS__
+#include <proto/bsdsocket.h>
+#endif
+
 #include "urldata.h"
 #include "sendf.h"
 #include "if2ip.h"
diff -ruN curl-7.37.1/lib/curl_gethostname.c curl-7.37.1-aros/lib/curl_gethostname.c
--- curl-7.37.1/lib/curl_gethostname.c	2014-06-11 19:52:29.000000000 +0200
+++ curl-7.37.1-aros/lib/curl_gethostname.c	2014-08-05 21:20:03.377284535 +0200
@@ -48,6 +48,10 @@
  * For libcurl static library release builds no overriding takes place.
  */
 
+#ifdef __AROS__
+#include <proto/bsdsocket.h>
+#endif
+
 int Curl_gethostname(char *name, GETHOSTNAME_TYPE_ARG2 namelen) {
 
 #ifndef HAVE_GETHOSTNAME
diff -ruN curl-7.37.1/lib/curl_setup.h curl-7.37.1-aros/lib/curl_setup.h
--- curl-7.37.1/lib/curl_setup.h	2014-07-14 20:13:09.000000000 +0200
+++ curl-7.37.1-aros/lib/curl_setup.h	2014-08-05 21:26:36.757291288 +0200
@@ -456,6 +456,13 @@
 
 #  endif /* MSDOS */
 
+#  ifdef __AROS__
+#   undef HAVE_ALARM
+#   undef HAVE_SIGNAL
+#   undef HAVE_SIGACTION
+#  endif
+
+
 #  ifdef __minix
      /* Minix 3 versions up to at least 3.1.3 are missing these prototypes */
      extern char * strtok_r(char *s, const char *delim, char **last);
diff -ruN curl-7.37.1/lib/file.c curl-7.37.1-aros/lib/file.c
--- curl-7.37.1/lib/file.c	2014-06-11 19:52:29.000000000 +0200
+++ curl-7.37.1-aros/lib/file.c	2014-08-05 20:20:50.085223541 +0200
@@ -192,7 +192,7 @@
   char *real_path;
   struct FILEPROTO *file = data->req.protop;
   int fd;
-#ifdef DOS_FILESYSTEM
+#if defined DOS_FILESYSTEM || defined __AROS__
   int i;
   char *actual_path;
 #endif
@@ -231,6 +231,14 @@
 
   fd = open_readonly(actual_path, O_RDONLY|O_BINARY);
   file->path = actual_path;
+#elif defined __AROS__
+  /* On AROS paths can start with volume name, skip slash in this case */
+  actual_path = real_path;
+  if(actual_path[0] == '/' && strchr(actual_path, ':'))
+    actual_path++;
+
+  fd = open(actual_path, O_RDONLY);
+  file->path = actual_path;
 #else
   fd = open_readonly(real_path, O_RDONLY);
   file->path = real_path;
diff -ruN curl-7.37.1/lib/ftp.c curl-7.37.1-aros/lib/ftp.c
--- curl-7.37.1/lib/ftp.c	2014-06-11 19:52:29.000000000 +0200
+++ curl-7.37.1-aros/lib/ftp.c	2014-08-05 20:20:50.085223541 +0200
@@ -46,6 +46,10 @@
 #define in_addr_t unsigned long
 #endif
 
+#ifdef __AROS__
+#include <proto/bsdsocket.h>
+#endif
+
 #include <curl/curl.h>
 #include "urldata.h"
 #include "sendf.h"
diff -ruN curl-7.37.1/lib/getinfo.c curl-7.37.1-aros/lib/getinfo.c
--- curl-7.37.1/lib/getinfo.c	2014-06-11 23:52:15.000000000 +0200
+++ curl-7.37.1-aros/lib/getinfo.c	2014-08-05 20:20:50.085223541 +0200
@@ -32,6 +32,10 @@
 #include "connect.h" /* Curl_getconnectinfo() */
 #include "progress.h"
 
+#ifdef __AROS__
+#include <proto/bsdsocket.h>
+#endif
+
 /* Make this the last #include */
 #include "memdebug.h"
 
diff -ruN curl-7.37.1/lib/hostip4.c curl-7.37.1-aros/lib/hostip4.c
--- curl-7.37.1/lib/hostip4.c	2014-06-11 19:52:29.000000000 +0200
+++ curl-7.37.1-aros/lib/hostip4.c	2014-08-05 20:20:50.085223541 +0200
@@ -40,6 +40,10 @@
 #include <process.h>
 #endif
 
+#ifdef __AROS__
+#include <proto/bsdsocket.h>
+#endif
+
 #include "urldata.h"
 #include "sendf.h"
 #include "hostip.h"
diff -ruN curl-7.37.1/lib/http.c curl-7.37.1-aros/lib/http.c
--- curl-7.37.1/lib/http.c	2014-07-02 23:53:25.000000000 +0200
+++ curl-7.37.1-aros/lib/http.c	2014-08-05 20:20:50.085223541 +0200
@@ -45,6 +45,10 @@
 #include <sys/param.h>
 #endif
 
+#ifdef __AROS__
+#include <proto/bsdsocket.h>
+#endif
+
 #include "urldata.h"
 #include <curl/curl.h>
 #include "transfer.h"
diff -ruN curl-7.37.1/lib/if2ip.c curl-7.37.1-aros/lib/if2ip.c
--- curl-7.37.1/lib/if2ip.c	2014-06-11 19:52:29.000000000 +0200
+++ curl-7.37.1-aros/lib/if2ip.c	2014-08-05 20:20:50.085223541 +0200
@@ -50,6 +50,10 @@
 #  include <inet.h>
 #endif
 
+#ifdef __AROS__
+#include <proto/bsdsocket.h>
+#endif
+
 #include "inet_ntop.h"
 #include "strequal.h"
 #include "if2ip.h"
diff -ruN curl-7.37.1/lib/inet_ntop.c curl-7.37.1-aros/lib/inet_ntop.c
--- curl-7.37.1/lib/inet_ntop.c	2014-06-11 19:52:29.000000000 +0200
+++ curl-7.37.1-aros/lib/inet_ntop.c	2014-08-05 20:20:50.085223541 +0200
@@ -32,6 +32,10 @@
 #include <arpa/inet.h>
 #endif
 
+#ifdef __AROS__
+#include <proto/bsdsocket.h>
+#endif
+
 #define _MPRINTF_REPLACE /* use our functions only */
 #include <curl/mprintf.h>
 
diff -ruN curl-7.37.1/lib/Makefile.in curl-7.37.1-aros/lib/Makefile.in
--- curl-7.37.1/lib/Makefile.in	2014-07-14 20:50:05.000000000 +0200
+++ curl-7.37.1-aros/lib/Makefile.in	2014-08-05 20:20:50.085223541 +0200
@@ -215,7 +215,7 @@
 	libcurl_la-bundles.lo libcurl_la-conncache.lo \
 	libcurl_la-pipeline.lo libcurl_la-dotdot.lo \
 	libcurl_la-x509asn1.lo libcurl_la-http2.lo \
-	libcurl_la-curl_sasl_sspi.lo
+	libcurl_la-curl_sasl_sspi.lo libcurl_la-aros.lo
 am__dirstamp = $(am__leading_dot)dirstamp
 am__objects_2 = vtls/libcurl_la-openssl.lo vtls/libcurl_la-gtls.lo \
 	vtls/libcurl_la-vtls.lo vtls/libcurl_la-nss.lo \
@@ -666,7 +666,7 @@
   asyn-thread.c curl_gssapi.c curl_ntlm.c curl_ntlm_wb.c		\
   curl_ntlm_core.c curl_ntlm_msgs.c curl_sasl.c curl_multibyte.c	\
   hostcheck.c bundles.c conncache.c pipeline.c dotdot.c x509asn1.c	\
-  http2.c curl_sasl_sspi.c
+  http2.c curl_sasl_sspi.c aros.c
 
 LIB_HFILES = arpa_telnet.h netrc.h file.h timeval.h hostip.h progress.h	\
   formdata.h cookie.h http.h sendf.h ftp.h url.h dict.h if2ip.h		\
@@ -861,6 +861,7 @@
 distclean-compile:
 	-rm -f *.tab.c
 
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-aros.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-amigaos.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-asyn-ares.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-asyn-thread.Plo@am__quote@
@@ -883,6 +884,7 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-curl_rtmp.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-curl_sasl.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-curl_sasl_sspi.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-aros.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-curl_sspi.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-curl_threads.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcurl_la-dict.Plo@am__quote@
@@ -1819,6 +1821,13 @@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurl_la_CPPFLAGS) $(CPPFLAGS) $(libcurl_la_CFLAGS) $(CFLAGS) -c -o libcurl_la-curl_sasl_sspi.lo `test -f 'curl_sasl_sspi.c' || echo '$(srcdir)/'`curl_sasl_sspi.c
 
+libcurl_la-aros.lo: aros.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurl_la_CPPFLAGS) $(CPPFLAGS) $(libcurl_la_CFLAGS) $(CFLAGS) -MT libcurl_la-aros.lo -MD -MP -MF $(DEPDIR)/libcurl_la-aros.Tpo -c -o libcurl_la-aros.lo `test -f 'aros.c' || echo '$(srcdir)/'`aros.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libcurl_la-aros.Tpo $(DEPDIR)/libcurl_la-aros.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='aros.c' object='libcurl_la-aros.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurl_la_CPPFLAGS) $(CPPFLAGS) $(libcurl_la_CFLAGS) $(CFLAGS) -c -o libcurl_la-aros.lo `test -f 'aros.c' || echo '$(srcdir)/'`aros.c
+
 vtls/libcurl_la-openssl.lo: vtls/openssl.c
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcurl_la_CPPFLAGS) $(CPPFLAGS) $(libcurl_la_CFLAGS) $(CFLAGS) -MT vtls/libcurl_la-openssl.lo -MD -MP -MF vtls/$(DEPDIR)/libcurl_la-openssl.Tpo -c -o vtls/libcurl_la-openssl.lo `test -f 'vtls/openssl.c' || echo '$(srcdir)/'`vtls/openssl.c
 @am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) vtls/$(DEPDIR)/libcurl_la-openssl.Tpo vtls/$(DEPDIR)/libcurl_la-openssl.Plo
diff -ruN curl-7.37.1/lib/Makefile.inc curl-7.37.1-aros/lib/Makefile.inc
--- curl-7.37.1/lib/Makefile.inc	2014-06-11 19:52:29.000000000 +0200
+++ curl-7.37.1-aros/lib/Makefile.inc	2014-08-05 20:20:50.085223541 +0200
@@ -45,7 +45,7 @@
   asyn-thread.c curl_gssapi.c curl_ntlm.c curl_ntlm_wb.c		\
   curl_ntlm_core.c curl_ntlm_msgs.c curl_sasl.c curl_multibyte.c	\
   hostcheck.c bundles.c conncache.c pipeline.c dotdot.c x509asn1.c	\
-  http2.c curl_sasl_sspi.c
+  http2.c curl_sasl_sspi.c aros.c
 
 LIB_HFILES = arpa_telnet.h netrc.h file.h timeval.h hostip.h progress.h	\
   formdata.h cookie.h http.h sendf.h ftp.h url.h dict.h if2ip.h		\
diff -ruN curl-7.37.1/lib/memdebug.c curl-7.37.1-aros/lib/memdebug.c
--- curl-7.37.1/lib/memdebug.c	2014-06-11 19:52:29.000000000 +0200
+++ curl-7.37.1-aros/lib/memdebug.c	2014-08-05 20:20:50.085223541 +0200
@@ -26,6 +26,10 @@
 
 #include <curl/curl.h>
 
+#ifdef __AROS__
+#include <proto/bsdsocket.h>
+#endif
+
 #define _MPRINTF_REPLACE
 #include <curl/mprintf.h>
 #include "urldata.h"
diff -ruN curl-7.37.1/lib/multi.c curl-7.37.1-aros/lib/multi.c
--- curl-7.37.1/lib/multi.c	2014-07-02 23:54:52.000000000 +0200
+++ curl-7.37.1-aros/lib/multi.c	2014-08-05 20:20:50.085223541 +0200
@@ -22,6 +22,10 @@
 
 #include "curl_setup.h"
 
+#ifdef __AROS__
+#include <proto/bsdsocket.h>
+#endif
+
 #include <curl/curl.h>
 
 #include "urldata.h"
diff -ruN curl-7.37.1/lib/nonblock.c curl-7.37.1-aros/lib/nonblock.c
--- curl-7.37.1/lib/nonblock.c	2014-06-11 19:52:29.000000000 +0200
+++ curl-7.37.1-aros/lib/nonblock.c	2014-08-06 18:37:05.803426136 +0200
@@ -37,6 +37,10 @@
 #include <inet.h>
 #endif
 
+#ifdef __AROS__
+#include <proto/bsdsocket.h>
+#endif
+
 #include "nonblock.h"
 
 /*
@@ -76,8 +80,8 @@
 #elif defined(HAVE_IOCTLSOCKET_CAMEL_FIONBIO)
 
   /* Amiga */
-  long flags = nonblock ? 1L : 0L;
-  return IoctlSocket(sockfd, FIONBIO, flags);
+  int flags = nonblock ? 1L : 0L;
+  return IoctlSocket(sockfd, FIONBIO, &flags);
 
 #elif defined(HAVE_SETSOCKOPT_SO_NONBLOCK)
 
diff -ruN curl-7.37.1/lib/select.c curl-7.37.1-aros/lib/select.c
--- curl-7.37.1/lib/select.c	2014-06-11 19:52:29.000000000 +0200
+++ curl-7.37.1-aros/lib/select.c	2014-08-06 18:37:05.803426136 +0200
@@ -35,6 +35,10 @@
 #include <socket.h>
 #endif
 
+#ifdef __AROS__
+#include <proto/bsdsocket.h>
+#endif
+
 #ifdef MSDOS
 #include <dos.h>  /* delay() */
 #endif
@@ -566,3 +570,4 @@
    return(rc);
 }
 #endif /* TPF */
+
diff -ruN curl-7.37.1/lib/sendf.c curl-7.37.1-aros/lib/sendf.c
--- curl-7.37.1/lib/sendf.c	2014-06-11 19:52:29.000000000 +0200
+++ curl-7.37.1-aros/lib/sendf.c	2014-08-05 20:20:50.085223541 +0200
@@ -22,6 +22,10 @@
 
 #include "curl_setup.h"
 
+#ifdef __AROS__
+#include <proto/bsdsocket.h>
+#endif
+
 #include <curl/curl.h>
 
 #include "urldata.h"
diff -ruN curl-7.37.1/lib/telnet.c curl-7.37.1-aros/lib/telnet.c
--- curl-7.37.1/lib/telnet.c	2014-06-11 19:52:29.000000000 +0200
+++ curl-7.37.1-aros/lib/telnet.c	2014-08-05 20:20:50.085223541 +0200
@@ -44,6 +44,10 @@
 #include <sys/param.h>
 #endif
 
+#ifdef __AROS__
+#include <proto/bsdsocket.h>
+#endif
+
 #include "urldata.h"
 #include <curl/curl.h>
 #include "transfer.h"
diff -ruN curl-7.37.1/lib/tftp.c curl-7.37.1-aros/lib/tftp.c
--- curl-7.37.1/lib/tftp.c	2014-06-11 19:52:29.000000000 +0200
+++ curl-7.37.1-aros/lib/tftp.c	2014-08-05 20:20:50.085223541 +0200
@@ -44,6 +44,10 @@
 #include <sys/param.h>
 #endif
 
+#ifdef __AROS__
+#include <proto/bsdsocket.h>
+#endif
+
 #include "urldata.h"
 #include <curl/curl.h>
 #include "transfer.h"
diff -ruN curl-7.37.1/lib/transfer.c curl-7.37.1-aros/lib/transfer.c
--- curl-7.37.1/lib/transfer.c	2014-06-11 23:52:15.000000000 +0200
+++ curl-7.37.1-aros/lib/transfer.c	2014-08-05 20:20:50.085223541 +0200
@@ -57,6 +57,10 @@
 #error "We can't compile without socket() support!"
 #endif
 
+#ifdef __AROS__
+#include <proto/bsdsocket.h>
+#endif
+
 #include "urldata.h"
 #include <curl/curl.h>
 #include "netrc.h"
diff -ruN curl-7.37.1/lib/url.c curl-7.37.1-aros/lib/url.c
--- curl-7.37.1/lib/url.c	2014-07-15 23:49:55.000000000 +0200
+++ curl-7.37.1-aros/lib/url.c	2014-08-05 20:20:50.085223541 +0200
@@ -55,6 +55,10 @@
 #include <limits.h>
 #endif
 
+#ifdef __AROS__
+#include <proto/bsdsocket.h>
+#endif
+
 #ifdef USE_LIBIDN
 #include <idna.h>
 #include <tld.h>
diff -ruN curl-7.37.1/src/tool_main.c curl-7.37.1-aros/src/tool_main.c
--- curl-7.37.1/src/tool_main.c	2014-07-04 18:28:45.000000000 +0200
+++ curl-7.37.1-aros/src/tool_main.c	2014-08-05 20:20:50.085223541 +0200
@@ -32,6 +32,10 @@
 #include <plarenas.h>
 #endif
 
+#ifdef __AROS__
+#include <proto/bsdsocket.h>
+#endif
+
 #define ENABLE_CURLX_PRINTF
 /* use our own printf() functions */
 #include "curlx.h"
diff -ruN curl-7.37.1/src/tool_operate.c curl-7.37.1-aros/src/tool_operate.c
--- curl-7.37.1/src/tool_operate.c	2014-06-13 23:33:25.000000000 +0200
+++ curl-7.37.1-aros/src/tool_operate.c	2014-08-05 20:20:50.085223541 +0200
@@ -35,6 +35,10 @@
 #  include <locale.h>
 #endif
 
+#ifdef HAVE_NETINET_IN_H
+#  include <netinet/in.h>
+#endif
+
 #ifdef HAVE_NETINET_TCP_H
 #  include <netinet/tcp.h>
 #endif
diff -ruN curl-7.37.1/src/tool_sleep.c curl-7.37.1-aros/src/tool_sleep.c
--- curl-7.37.1/src/tool_sleep.c	2014-06-11 19:52:29.000000000 +0200
+++ curl-7.37.1-aros/src/tool_sleep.c	2014-08-05 21:27:53.021292597 +0200
@@ -35,6 +35,10 @@
 #  include <dos.h>
 #endif
 
+#ifdef __AROS__
+#include <proto/bsdsocket.h>
+#endif
+
 #include "tool_sleep.h"
 
 #include "memdebug.h" /* keep this as LAST include */
--- curl-7.37.1/lib/vtls/openssl.c	2014-06-11 23:58:27.000000000 +0200
+++ curl-7.37.1-aros/lib/vtls/openssl.c	2018-11-05 18:48:56.693466836 +0100
@@ -1,4 +1,4 @@
-/***************************************************************************
+/*******
  *                                  _   _ ____  _
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
@@ -63,6 +63,7 @@
 #include <openssl/err.h>
 #include <openssl/md5.h>
 #include <openssl/conf.h>
+#include <openssl/evp.h>
 #else
 #include <rand.h>
 #include <x509v3.h>
@@ -740,8 +741,9 @@
   if(!SSLeay_add_ssl_algorithms())
     return 0;
 
-  OpenSSL_add_all_algorithms();
-  OPENSSL_config(NULL);
+  //Nicola: not required
+  //OpenSSL_add_all_algorithms();
+  //OPENSSL_config(); 
 
   return 1;
 }
@@ -771,7 +773,8 @@
 
   /* Free thread local error state, destroying hash upon zero refcount */
 #ifdef HAVE_ERR_REMOVE_THREAD_STATE
-  ERR_remove_thread_state(NULL);
+  //Nicola: not required since deprecated
+  //ERR_remove_thread_state(NULL);
 #else
   ERR_remove_state(0);
 #endif
@@ -1150,7 +1153,7 @@
       /* only check alternatives of the same type the target is */
       if(check->type == target) {
         /* get data and length */
-        const char *altptr = (char *)ASN1_STRING_data(check->d.ia5);
+        const char *altptr = (char *)ASN1_STRING_get0_data(check->d.ia5);
         size_t altlen = (size_t) ASN1_STRING_length(check->d.ia5);
 
         switch(target) {
@@ -1232,7 +1235,7 @@
           if(j >= 0) {
             peer_CN = OPENSSL_malloc(j+1);
             if(peer_CN) {
-              memcpy(peer_CN, ASN1_STRING_data(tmp), j);
+              memcpy(peer_CN, ASN1_STRING_get0_data(tmp), j);
               peer_CN[j] = '\0';
             }
           }
@@ -1290,7 +1293,7 @@
 
 static const char *ssl_msg_type(int ssl_ver, int msg)
 {
-  if(ssl_ver == SSL2_VERSION_MAJOR) {
+  /* if(ssl_ver == SSL2_VERSION) {
     switch (msg) {
       case SSL2_MT_ERROR:
         return "Error";
@@ -1312,7 +1315,8 @@
         return "Client CERT";
     }
   }
-  else if(ssl_ver == SSL3_VERSION_MAJOR) {
+  else */
+  if(ssl_ver == SSL3_VERSION_MAJOR) {
     switch (msg) {
       case SSL3_MT_HELLO_REQUEST:
         return "Hello request";
@@ -1368,8 +1372,7 @@
 
   data = conn->data;
   ssl_ver >>= 8;
-  ver = (ssl_ver == SSL2_VERSION_MAJOR ? '2' :
-         ssl_ver == SSL3_VERSION_MAJOR ? '3' : '?');
+  ver = (ssl_ver == SSL3_VERSION_MAJOR ? '3' : '?');
 
   /* SSLv2 doesn't seem to have TLS record-type headers, so OpenSSL
    * always pass-up content-type as 0. But the interesting message-type
@@ -1459,7 +1462,7 @@
   if(NULL == session)
     return "";
 
-  switch(session->ssl_version) {
+  switch(SSL_SESSION_get_protocol_version(session)) {
 #if OPENSSL_VERSION_NUMBER >= 0x1000100FL
   case TLS1_2_VERSION:
     return "TLSv1.2";
@@ -1536,12 +1539,14 @@
     break;
 #endif
   case CURL_SSLVERSION_SSLv3:
+      return CURLE_SSL_CONNECT_ERROR;
+/*
 #ifdef USE_TLS_SRP
     if(data->set.ssl.authtype == CURL_TLSAUTH_SRP)
       return CURLE_SSL_CONNECT_ERROR;
 #endif
     req_method = SSLv3_client_method();
-    use_sni(FALSE);
+    use_sni(FALSE); */
     break;
   }
 
@@ -2070,6 +2075,43 @@
   }
 }
 
+#define print_pubkey_BN(_type, _name, _num)              \
+pubkey_show(data, mem, _num, #_type, #_name, _name)
+
+#define push_certinfo(_label, _num) \
+do {                              \
+  long info_len = BIO_get_mem_data(mem, &ptr); \
+  Curl_ssl_push_certinfo_len(data, _num, _label, ptr, info_len); \
+  if(1 != BIO_reset(mem))                                        \
+    break;                                                       \
+} WHILE_FALSE
+
+/*
+static void pubkey_show(struct Curl_easy *data,
+                        BIO *mem,
+                        int num,
+                        const char *type,
+                        const char *name,
+#ifdef HAVE_OPAQUE_RSA_DSA_DH
+                        const
+#endif
+                        BIGNUM *bn)
+{
+  char *ptr;
+  char namebuf[32];
+
+  snprintf(namebuf, sizeof(namebuf), "%s(%s)", type, name);
+
+  if(bn)
+    BN_print(mem, bn);
+  push_certinfo(namebuf, num);
+}
+
+#define print_pubkey_BN(_type, _name, _num) \
+  pubkey_show(data, mem, _num, #_type, #_name, _name)
+
+*/
+/*
 #define print_pubkey_BN(_type, _name, _num)    \
 do {                              \
   if(pubkey->pkey._type->_name != NULL) { \
@@ -2081,6 +2123,7 @@
     } \
   } \
 } WHILE_FALSE
+*/
 
 static int X509V3_ext(struct SessionHandle *data,
                       int certnum,
@@ -2113,7 +2156,9 @@
           X509_EXTENSION_get_critical(ext)?"(critical)":"");
 
     if(!X509V3_EXT_print(bio_out, ext, 0, 0))
-      M_ASN1_OCTET_STRING_print(bio_out, ext->value);
+      //M_ASN1_OCTET_STRING_print(bio_out, ext->value);
+      //M_ASN1_OCTET_STRING_print(bio_out, X509_EXTENSION_get_data(ext));
+      ASN1_STRING_print(bio_out, (ASN1_STRING *)X509_EXTENSION_get_data(ext));
 
     BIO_get_mem_ptr(bio_out, &biomem);
 
@@ -2182,149 +2227,140 @@
  */
 #define CERTBUFFERSIZE 8192
 
+#define ARG2_X509_signature_print
 static CURLcode get_cert_chain(struct connectdata *conn,
                                struct ssl_connect_data *connssl)
 
 {
   STACK_OF(X509) *sk;
   int i;
-  char *bufp;
-  struct SessionHandle *data = conn->data;
   int numcerts;
 
-  bufp = malloc(CERTBUFFERSIZE);
-  if(!bufp)
-    return CURLE_OUT_OF_MEMORY;
 
   sk = SSL_get_peer_cert_chain(connssl->handle);
+//----
+
+  CURLcode result;
+  //STACK_OF(X509) *sk;
+  //int i;
+  struct Curl_easy *data = conn->data;
+  //int numcerts;
+  BIO *mem;
+
+  //sk = SSL_get_peer_cert_chain(BACKEND->handle);
   if(!sk) {
-    free(bufp);
     return CURLE_OUT_OF_MEMORY;
   }
 
   numcerts = sk_X509_num(sk);
-  if(Curl_ssl_init_certinfo(data, numcerts)) {
-    free(bufp);
-    return CURLE_OUT_OF_MEMORY;
+
+  result = Curl_ssl_init_certinfo(data, numcerts);
+  if(result) {
+    return result;
   }
 
-  infof(data, "--- Certificate chain\n");
-  for(i=0; i<numcerts; i++) {
-    long value;
-    ASN1_INTEGER *num;
-    ASN1_TIME *certdate;
+  mem = BIO_new(BIO_s_mem());
 
-    /* get the certs in "importance order" */
-#if 0
-    X509 *x = sk_X509_value(sk, numcerts - i - 1);
-#else
+  for(i = 0; i < numcerts; i++) {
+    ASN1_INTEGER *num;
     X509 *x = sk_X509_value(sk, i);
-#endif
-
-    X509_CINF *cinf;
-    EVP_PKEY *pubkey=NULL;
+    EVP_PKEY *pubkey = NULL;
     int j;
     char *ptr;
+    const ASN1_BIT_STRING *psig = NULL;
 
-    (void)x509_name_oneline(X509_get_subject_name(x), bufp, CERTBUFFERSIZE);
-    infof(data, "%2d Subject: %s\n", i, bufp);
-    Curl_ssl_push_certinfo(data, i, "Subject", bufp);
-
-    (void)x509_name_oneline(X509_get_issuer_name(x), bufp, CERTBUFFERSIZE);
-    infof(data, "   Issuer: %s\n", bufp);
-    Curl_ssl_push_certinfo(data, i, "Issuer", bufp);
-
-    value = X509_get_version(x);
-    infof(data, "   Version: %lu (0x%lx)\n", value+1, value);
-    snprintf(bufp, CERTBUFFERSIZE, "%lx", value);
-    Curl_ssl_push_certinfo(data, i, "Version", bufp); /* hex */
-
-    num=X509_get_serialNumber(x);
-    if(num->length <= 4) {
-      value = ASN1_INTEGER_get(num);
-      infof(data,"   Serial Number: %ld (0x%lx)\n", value, value);
-      snprintf(bufp, CERTBUFFERSIZE, "%lx", value);
-    }
-    else {
-      int left = CERTBUFFERSIZE;
-
-      ptr = bufp;
-      *ptr++ = 0;
-      if(num->type == V_ASN1_NEG_INTEGER)
-        *ptr++='-';
-
-      for(j=0; (j<num->length) && (left>=4); j++) {
-        /* TODO: length restrictions */
-        snprintf(ptr, 3, "%02x%c",num->data[j],
-                 ((j+1 == num->length)?'\n':':'));
-        ptr += 3;
-        left-=4;
-      }
-      if(num->length)
-        infof(data,"   Serial Number: %s\n", bufp);
-      else
-        bufp[0]=0;
-    }
-    if(bufp[0])
-      Curl_ssl_push_certinfo(data, i, "Serial Number", bufp); /* hex */
-
-    cinf = x->cert_info;
+    X509_NAME_print_ex(mem, X509_get_subject_name(x), 0, XN_FLAG_ONELINE);
+    push_certinfo("Subject", i);
 
-    j = asn1_object_dump(cinf->signature->algorithm, bufp, CERTBUFFERSIZE);
-    if(!j) {
-      infof(data, "   Signature Algorithm: %s\n", bufp);
-      Curl_ssl_push_certinfo(data, i, "Signature Algorithm", bufp);
-    }
+    X509_NAME_print_ex(mem, X509_get_issuer_name(x), 0, XN_FLAG_ONELINE);
+    push_certinfo("Issuer", i);
 
-    certdate = X509_get_notBefore(x);
-    asn1_output(certdate, bufp, CERTBUFFERSIZE);
-    infof(data, "   Start date: %s\n", bufp);
-    Curl_ssl_push_certinfo(data, i, "Start date", bufp);
+    BIO_printf(mem, "%lx", X509_get_version(x));
+    push_certinfo("Version", i);
+
+    num = X509_get_serialNumber(x);
+    if(num->type == V_ASN1_NEG_INTEGER)
+      BIO_puts(mem, "-");
+    for(j = 0; j < num->length; j++)
+      BIO_printf(mem, "%02x", num->data[j]);
+    push_certinfo("Serial Number", i);
+
+      const X509_ALGOR *palg = NULL;
+      ASN1_STRING *a = ASN1_STRING_new();
+      if(a) {
+        X509_get0_signature(&psig, &palg, x);
+        X509_signature_print(mem, ARG2_X509_signature_print palg, a);
+        ASN1_STRING_free(a);
+
+        if(palg) {
+          i2a_ASN1_OBJECT(mem, palg->algorithm);
+          push_certinfo("Public Key Algorithm", i);
+        }
+      }
+      X509V3_ext(data, i, X509_get0_extensions(x));
 
-    certdate = X509_get_notAfter(x);
-    asn1_output(certdate, bufp, CERTBUFFERSIZE);
-    infof(data, "   Expire date: %s\n", bufp);
-    Curl_ssl_push_certinfo(data, i, "Expire date", bufp);
+    ASN1_TIME_print(mem, X509_get0_notBefore(x));
+    push_certinfo("Start date", i);
 
-    j = asn1_object_dump(cinf->key->algor->algorithm, bufp, CERTBUFFERSIZE);
-    if(!j) {
-      infof(data, "   Public Key Algorithm: %s\n", bufp);
-      Curl_ssl_push_certinfo(data, i, "Public Key Algorithm", bufp);
-    }
+    ASN1_TIME_print(mem, X509_get0_notAfter(x));
+    push_certinfo("Expire date", i);
 
     pubkey = X509_get_pubkey(x);
     if(!pubkey)
       infof(data, "   Unable to load public key\n");
     else {
-      switch(pubkey->type) {
+      int pktype;
+      pktype = EVP_PKEY_id(pubkey);
+      switch(pktype) {
       case EVP_PKEY_RSA:
-        infof(data,  "   RSA Public Key (%d bits)\n",
-              BN_num_bits(pubkey->pkey.rsa->n));
-        snprintf(bufp, CERTBUFFERSIZE, "%d", BN_num_bits(pubkey->pkey.rsa->n));
-        Curl_ssl_push_certinfo(data, i, "RSA Public Key", bufp);
-
-        print_pubkey_BN(rsa, n, i);
-        print_pubkey_BN(rsa, e, i);
-        print_pubkey_BN(rsa, d, i);
-        print_pubkey_BN(rsa, p, i);
-        print_pubkey_BN(rsa, q, i);
-        print_pubkey_BN(rsa, dmp1, i);
-        print_pubkey_BN(rsa, dmq1, i);
-        print_pubkey_BN(rsa, iqmp, i);
+      {
+        RSA *rsa;
+        rsa = EVP_PKEY_get0_RSA(pubkey);
+          const BIGNUM *n;
+          const BIGNUM *e;
+
+          RSA_get0_key(rsa, &n, &e, NULL);
+          BN_print(mem, n);
+          push_certinfo("RSA Public Key", i);
+          print_pubkey_BN(rsa, n, i);
+          print_pubkey_BN(rsa, e, i);
+
         break;
+      }
       case EVP_PKEY_DSA:
-        print_pubkey_BN(dsa, p, i);
-        print_pubkey_BN(dsa, q, i);
-        print_pubkey_BN(dsa, g, i);
-        print_pubkey_BN(dsa, priv_key, i);
-        print_pubkey_BN(dsa, pub_key, i);
+      {
+        DSA *dsa;
+        dsa = EVP_PKEY_get0_DSA(pubkey);
+          const BIGNUM *p;
+          const BIGNUM *q;
+          const BIGNUM *g;
+          const BIGNUM *pub_key;
+
+          DSA_get0_pqg(dsa, &p, &q, &g);
+          DSA_get0_key(dsa, &pub_key, NULL);
+
+          print_pubkey_BN(dsa, p, i);
+          print_pubkey_BN(dsa, q, i);
+          print_pubkey_BN(dsa, g, i);
+          print_pubkey_BN(dsa, pub_key, i);
         break;
+      }
       case EVP_PKEY_DH:
-        print_pubkey_BN(dh, p, i);
-        print_pubkey_BN(dh, g, i);
-        print_pubkey_BN(dh, priv_key, i);
-        print_pubkey_BN(dh, pub_key, i);
+      {
+        DH *dh;
+        dh = EVP_PKEY_get0_DH(pubkey);
+          const BIGNUM *p;
+          const BIGNUM *q;
+          const BIGNUM *g;
+          const BIGNUM *pub_key;
+          DH_get0_pqg(dh, &p, &q, &g);
+          DH_get0_key(dh, &pub_key, NULL);
+          print_pubkey_BN(dh, p, i);
+          print_pubkey_BN(dh, q, i);
+          print_pubkey_BN(dh, g, i);
+          print_pubkey_BN(dh, pub_key, i);
         break;
+      }
 #if 0
       case EVP_PKEY_EC: /* symbol not present in OpenSSL 0.9.6 */
         /* left TODO */
@@ -2334,18 +2370,22 @@
       EVP_PKEY_free(pubkey);
     }
 
-    X509V3_ext(data, i, cinf->extensions);
-
-    X509_signature(data, i, x->signature);
+    if(psig) {
+      for(j = 0; j < psig->length; j++)
+        BIO_printf(mem, "%02x:", psig->data[j]);
+      push_certinfo("Signature", i);
+    }
 
-    dumpcert(data, x, i);
+    PEM_write_bio_X509(mem, x);
+    push_certinfo("Cert", i);
   }
 
-  free(bufp);
+  BIO_free(mem);
 
-  return CURLE_OK;
+return CURLE_OK;
 }
 
+
 /*
  * Get the server cert, verify it and show it etc, only call failf() if the
  * 'strict' argument is TRUE as otherwise all this is for informational
