diff -ruN gnurobbo-0.66/board.c gnurobbo-0.66.aros/board.c
--- gnurobbo-0.66/board.c	2010-08-31 15:17:53.000000000 +0100
+++ gnurobbo-0.66.aros/board.c	2016-03-16 04:17:31.044982001 +0000
@@ -1837,7 +1837,7 @@
 		     */
 		    if (rcfile.save_frequency == RCFILE_SAVE_ON_CHANGE) {
 			save_resource_file(path_resource_file, FALSE);
-#if defined(PLATFORM_WIN32) || defined(PLATFORM_PC)
+#if defined(PLATFORM_WIN32) || defined(PLATFORM_PC) || defined(PLATFORM_AROS)
 #elif defined(PLATFORM_GP2X)
 			system("sync");
 #elif defined(PLATFORM_ZAURUS)
diff -ruN gnurobbo-0.66/controls.c gnurobbo-0.66.aros/controls.c
--- gnurobbo-0.66/controls.c	2010-10-27 13:43:45.000000000 +0100
+++ gnurobbo-0.66.aros/controls.c	2016-03-16 04:17:31.045982012 +0000
@@ -563,7 +563,7 @@
 	/* Set some defaults */
 	for (count = 0; count < USER_CONTROLS; count++)
 	{
-		#if defined(PLATFORM_WIN32) || defined(PLATFORM_PC)
+		#if defined(PLATFORM_WIN32) || defined(PLATFORM_PC) || defined(PLATFORM_AROS)
 			user_controls[count].device = DEVICE_KEYBOARD;
 		#elif defined(PLATFORM_GP2X)
 			user_controls[count].device = DEVICE_JOYSTICK;
@@ -587,7 +587,7 @@
 	 * you don't want to use a control then just set its device to UNDEFINED
 	 * (id and mod are already set to UNDEFINED from the above code) otherwise
 	 * within Options you'll see the device shown on its own which looks weird */
-	#if defined(PLATFORM_WIN32) || defined(PLATFORM_PC)
+	#if defined(PLATFORM_WIN32) || defined(PLATFORM_PC) || defined(PLATFORM_AROS)
 		user_controls[ACTION_UP].id = SDLK_UP;
 		user_controls[ACTION_UP_RIGHT].device = UNDEFINED;
 		user_controls[ACTION_RIGHT].id = SDLK_RIGHT;
@@ -872,7 +872,7 @@
 	{
 		/* WARNING: attempting to close joystick 0 on the GP2X
 		 * using the GPH SDK causes a seg fault */
-		#if defined(PLATFORM_WIN32) || defined(PLATFORM_PC)
+		#if defined(PLATFORM_WIN32) || defined(PLATFORM_PC) || defined(PLATFORM_AROS)
 			if (joystick)
 			{
 		#elif defined(PLATFORM_GP2X)
diff -ruN gnurobbo-0.66/game.c gnurobbo-0.66.aros/game.c
--- gnurobbo-0.66/game.c	2010-09-03 17:06:05.000000000 +0100
+++ gnurobbo-0.66.aros/game.c	2016-03-16 04:17:31.045982012 +0000
@@ -180,7 +180,7 @@
   pointer_controls.state = POINTER_CONTROLS_MODE_OFF;
   pointer_controls.shoot_state = POINTER_CONTROLS_SHOOT_OFF;
   pointer_controls.pad_type = POINTER_CONTROLS_PAD_TYPE_VIEWPORT;	/* POINTER_CONTROLS_PAD_TYPE_SCREEN; */
-#if defined(PLATFORM_WIN32) || defined(PLATFORM_PC)
+#if defined(PLATFORM_WIN32) || defined(PLATFORM_PC) || defined(PLATFORM_AROS)
   gnurobbo_op_env.systempointer = TRUE;
 #elif defined(PLATFORM_GP2X)
   gnurobbo_op_env.systempointer = FALSE;
@@ -354,6 +354,8 @@
 	/* Set-up the resource file path for the required platform and read it now */
 	#if defined(PLATFORM_WIN32)
 		strcpy (path_resource_file, getenv("TEMP"));
+	#elif defined(PLATFORM_AROS)
+		strcpy (path_resource_file, "PROGDIR:");
 	#elif defined(PLATFORM_PC)
 		strcpy (path_resource_file, getenv ("HOME"));
 		strcat (path_resource_file, "/");
@@ -468,7 +470,7 @@
 	  initialise_joystick (UNDEFINED, default_joystick_name, TRUE);
     }
 
-#if defined(PLATFORM_WIN32) || defined(PLATFORM_PC)
+#if defined(PLATFORM_WIN32) || defined(PLATFORM_PC) || defined(PLATFORM_AROS)
   /* Load the window manager icon and set caption */
   set_wm_icon();
   SDL_WM_SetCaption ("GNU Robbo", "gnurobbo");
@@ -1608,7 +1610,7 @@
 
   /* WARNING: attempting to close joystick 0 on the GP2X using the GPH
    * SDK causes a seg fault and it may do the same on similar devices */
-#if defined(PLATFORM_WIN32) || defined(PLATFORM_PC)
+#if defined(PLATFORM_WIN32) || defined(PLATFORM_PC) || defined(PLATFORM_AROS)
   if (joystick)
     SDL_JoystickClose (joystick);
 #elif defined(PLATFORM_GP2X)
@@ -2192,7 +2194,7 @@
 	  if (rcfile.save_frequency == RCFILE_SAVE_ON_CHANGE)
 	    {
 	      save_resource_file (path_resource_file, FALSE);
-#if defined(PLATFORM_WIN32) || defined(PLATFORM_PC)
+#if defined(PLATFORM_WIN32) || defined(PLATFORM_PC) || defined(PLATFORM_AROS)
 #elif defined(PLATFORM_GP2X)
 	      system ("sync");
 #elif defined(PLATFORM_ZAURUS)
diff -ruN gnurobbo-0.66/game.h gnurobbo-0.66.aros/game.h
--- gnurobbo-0.66/game.h	2010-08-31 15:17:53.000000000 +0100
+++ gnurobbo-0.66.aros/game.h	2016-03-16 04:22:20.697097558 +0000
@@ -77,8 +77,12 @@
 */
 
 
+#ifndef TRUE
 #define TRUE 1
+#endif
+#ifndef FALSE
 #define FALSE 0
+#endif
 
 #define UNDEFINED -1
 
diff -ruN gnurobbo-0.66/levels.c gnurobbo-0.66.aros/levels.c
--- gnurobbo-0.66/levels.c	2010-08-30 17:43:47.000000000 +0100
+++ gnurobbo-0.66.aros/levels.c	2016-03-16 04:17:31.046982023 +0000
@@ -182,7 +182,7 @@
 	FILE *fp;
 	char fullpath[256];
 	#if defined(PLATFORM_WIN32)
-	#elif defined(PLATFORM_PC) || defined(PLATFORM_ZAURUS) || defined(PLATFORM_FREMANTLE)
+	#elif defined(PLATFORM_PC) || defined(PLATFORM_ZAURUS) || defined(PLATFORM_FREMANTLE) || defined(PLATFORM_AROS)
 		char foldername[256];
 	#elif defined(PLATFORM_GP2X)
 	#elif defined(PLATFORM_PSP)
@@ -194,6 +194,8 @@
 	#elif defined(PLATFORM_PC) || defined(PLATFORM_ZAURUS) || defined(PLATFORM_FREMANTLE)
 		strcpy (fullpath, getenv ("HOME"));
 		strcat (fullpath, "/" LOCAL_DATA_DIR "/" LEVELS_DIR "/" DEFAULT_USER_LEVEL_PACK);
+	#elif defined(PLATFORM_AROS)
+		strcpy (fullpath, "PROGDIR:" LOCAL_DATA_DIR "/" LEVELS_DIR "/" DEFAULT_USER_LEVEL_PACK);
 	#elif defined(PLATFORM_GP2X) || defined(PLATFORM_PSP)
 		strcpy (fullpath, PACKAGE_DATA_DIR "/" LEVELS_DIR "/" DEFAULT_USER_LEVEL_PACK);
 	#endif
@@ -208,6 +210,12 @@
 
 			/* Create directory structure ignoring errors */
 			#if defined(PLATFORM_WIN32)
+			#elif defined(PLATFORM_AROS)
+				strcpy (foldername, "PROGDIR:" LOCAL_DATA_DIR);
+				mkdir (foldername, 0755);
+				strcat (foldername, LEVELS_DIR);
+				strcat (foldername, "/" LEVELS_DIR);
+				mkdir (foldername, 0755);
 			#elif defined(PLATFORM_PC) || defined(PLATFORM_ZAURUS) || defined(PLATFORM_FREMANTLE)
 				strcpy (foldername, getenv ("HOME"));
 				strcat (foldername, "/" LOCAL_DATA_DIR);
@@ -299,7 +307,7 @@
 
 	#if defined(PLATFORM_WIN32)
 		for (count = 0; count < 1; count++)
-	#elif defined(PLATFORM_PC) || defined(PLATFORM_ZAURUS) || defined(PLATFORM_FREMANTLE)
+	#elif defined(PLATFORM_PC) || defined(PLATFORM_ZAURUS) || defined(PLATFORM_FREMANTLE) || defined(PLATFORM_AROS)
 		for (count = 0; count < 2; count++)
 	#elif defined(PLATFORM_GP2X) || defined(PLATFORM_PSP)
 		for (count = 0; count < 1; count++)
@@ -312,6 +320,8 @@
 		else if (count == 1)
 		{
 			#if defined(PLATFORM_WIN32)
+			#elif defined(PLATFORM_AROS)
+				strcpy (foldername, "PROGDIR:" LOCAL_DATA_DIR "/" LEVELS_DIR);
 			#elif defined(PLATFORM_PC) || defined(PLATFORM_ZAURUS) || defined(PLATFORM_FREMANTLE)
 				strcpy (foldername, getenv ("HOME"));
 				strcat (foldername, "/" LOCAL_DATA_DIR "/" LEVELS_DIR);
diff -ruN gnurobbo-0.66/locales.c gnurobbo-0.66.aros/locales.c
--- gnurobbo-0.66/locales.c	2010-11-12 00:04:56.000000000 +0000
+++ gnurobbo-0.66.aros/locales.c	2016-03-16 04:17:31.046982023 +0000
@@ -326,6 +326,10 @@
 		strcpy (config_items[++row].name, "[txt_intro_keys_PLATFORM_PC]");
 		config_items[row].destination = txt_intro_keys;
 		config_items[row].max_rows = TXT_INTRO_KEYS_ROWS;
+	#elif defined(PLATFORM_AROS)
+		strcpy (config_items[++row].name, "[txt_intro_keys_PLATFORM_AROS]");
+		config_items[row].destination = txt_intro_keys;
+		config_items[row].max_rows = TXT_INTRO_KEYS_ROWS;
 	#elif defined(PLATFORM_GP2X)
 		strcpy (config_items[++row].name, "[txt_intro_keys_PLATFORM_GP2X]");
 		config_items[row].destination = txt_intro_keys;
diff -ruN gnurobbo-0.66/rcfile.h gnurobbo-0.66.aros/rcfile.h
--- gnurobbo-0.66/rcfile.h	2010-08-24 22:57:10.000000000 +0100
+++ gnurobbo-0.66.aros/rcfile.h	2016-03-16 04:17:31.046982023 +0000
@@ -23,6 +23,8 @@
 	#define RESOURCE_FILE "gnurobborc"
 #elif defined(PLATFORM_PC)
 	#define RESOURCE_FILE ".gnurobborc"
+#elif defined(PLATFORM_AROS)
+	#define RESOURCE_FILE ".gnurobborc"
 #elif defined(PLATFORM_GP2X)
 	#define RESOURCE_FILE "gnurobborc"
 #elif defined(PLATFORM_ZAURUS)
diff -ruN gnurobbo-0.66/screen.c gnurobbo-0.66.aros/screen.c
--- gnurobbo-0.66/screen.c	2010-09-01 13:33:27.000000000 +0100
+++ gnurobbo-0.66.aros/screen.c	2016-03-16 04:17:31.048982045 +0000
@@ -1237,7 +1237,7 @@
 	video.field_size = 16;
     }
 
-#if defined(PLATFORM_WIN32) || defined(PLATFORM_PC)
+#if defined(PLATFORM_WIN32) || defined(PLATFORM_PC) || defined(PLATFORM_AROS)
 #elif defined(PLATFORM_GP2X)
   /* Force GP2X screen resolution as there is no option. */
   video.xres = 320; video.yres = 240; video.field_size = 16;
@@ -1249,7 +1249,7 @@
   if (video.fullscreen == UNDEFINED)
     video.fullscreen = 0;
 
-#if defined(PLATFORM_WIN32) || defined(PLATFORM_PC)
+#if defined(PLATFORM_WIN32) || defined(PLATFORM_PC) || defined(PLATFORM_AROS)
 #elif defined(PLATFORM_GP2X)
   video.fullscreen = SDL_FULLSCREEN;
 #elif defined(PLATFORM_ZAURUS)
@@ -1354,7 +1354,7 @@
   printf ("BytesPerPixel: %u\n", videoinfo->vfmt->BytesPerPixel);
 #endif
 
-#if defined(PLATFORM_WIN32) || defined(PLATFORM_PC)
+#if defined(PLATFORM_WIN32) || defined(PLATFORM_PC) ||defined(PLATFORM_AROS)
 #elif defined(PLATFORM_GP2X)
   /* Well after all that clever video mode detection code the GPH GP2X
    * SDL states it has hwsurface support and then seg faults ;) */
@@ -3045,7 +3045,7 @@
 		options[(OPTIONS_SCREEN_PAGES - 1) * 13 + OPTIONS_MENUPOS_RIGHT] = FALSE;
 
 		/* Disable Toggle Fullscreen on platforms that don't support this */
-		#if defined(PLATFORM_WIN32) || defined(PLATFORM_PC)
+		#if defined(PLATFORM_WIN32) || defined(PLATFORM_PC) || defined(PLATFORM_AROS)
 		#elif defined(PLATFORM_GP2X)
 			options[OPTIONS_ACTION_TOGGLE_FULLSCREEN] = FALSE;
 		#elif defined(PLATFORM_ZAURUS)
@@ -3055,7 +3055,7 @@
 		#endif
 
 		/* Disable pointer options on platforms that don't support the mouse */
-		#if defined(PLATFORM_WIN32) || defined(PLATFORM_PC)
+		#if defined(PLATFORM_WIN32) || defined(PLATFORM_PC) || defined(PLATFORM_AROS)
 		#elif defined(PLATFORM_GP2X)
 			#ifndef HAVE_DESIGNER
 				/* F100 doesn't support the mouse, F200 does (or can) so
